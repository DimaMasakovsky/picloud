{"version":3,"sources":["./src/app/guards/login.guard.ts","./src/app/zoom.directive.ts","./src/app/post-header/post-header.component.html","./src/app/post-header/post-header.component.ts","./src/app/services/crud.service.ts","./src/app/double-content.directive.ts","./src/environments/environment.ts","./src/app/guards/auth.guard.service.ts","./src/app/new-post-form/new-post-form.component.ts","./src/app/new-post-form/new-post-form.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/app.module.ts","./src/app/feed/feed.component.html","./src/app/feed/feed.component.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/profile-post/profile-post.component.html","./src/app/profile-post/profile-post.component.ts","./src/app/services/upload.service.ts","./src/app/feed-post/feed-post.component.ts","./src/app/feed-post/feed-post.component.html","./src/app/services/auth.service.ts","./src/app/services/storage.service.ts","./src/app/profile-header/profile-header.component.html","./src/app/profile-header/profile-header.component.ts","./src/app/auth-window/auth-window.component.ts","./src/app/auth-window/auth-window.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { take,  tap, map} from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> {\n      return this.authService.user$.pipe(\n        map((value) => !value),\n        tap((guest) => {\n          if (!guest) {\n            console.log('User is authorized');\n            this.router.navigate(['feed']);\n          }\n        }),\n        take(1)\n      );\n  }\n  \n}\n\n\n\n","import { Directive, ElementRef, HostListener, Input, OnInit } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: '[zoom]'\r\n})\r\n\r\n\r\n\r\nexport class ZoomDirective implements OnInit {\r\n  @Input('zoomSize') size; \r\n\r\n  @HostListener('mouseover') \r\n  public onMouseOver() {\r\n    this.elementDirective.nativeElement.style.fontSize = `${this.size * 2}px`;\r\n  }\r\n  @HostListener('mouseout') \r\n  public onMouseOut() {\r\n    this.elementDirective.nativeElement.style.fontSize = `${this.size}px`;\r\n  }\r\n  private elementDirective: ElementRef;\r\n\r\n  constructor(private element: ElementRef) {\r\n    this.elementDirective = element;\r\n  }\r\n  ngOnInit() : void { \r\n    this.elementDirective.nativeElement.style.fontSize = `${this.size}px`;\r\n  }\r\n}","<div class=\"image-wrapper\">\n  <ng-container [ngTemplateOutlet]=\"user ? userImage : defaultImage\">\n  </ng-container>\n</div>\n<div class=\"info-wrapper\">\n  <p class=\"name\" (click)=\"this.router.navigate(['/profile', this.userID])\">{{user?.displayName}}</p>\n  <p class=\"date\">{{getDate()}}</p>\n</div>        \n\n<ng-template #userImage>\n  <div class=\"image\" [style.backgroundImage]=\"getBackgroundImage()\"></div>\n</ng-template>\n\n\n<ng-template #defaultImage>\n  <div class=\"image\"></div>\n</ng-template>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { CrudService } from '../services/crud.service';\nimport { Observable, of, Subscription } from 'rxjs'; \nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../interfaces';\n@Component({\n  selector: 'app-post-header',\n  templateUrl: './post-header.component.html',\n  styleUrls: ['./post-header.component.scss']\n})\nexport class PostHeaderComponent implements OnInit, OnDestroy {  \n  @Input()\n  public userID: string;\n\n  @Input()\n  public createTime: {seconds: string};\n\n  public user: User; \n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private crudService: CrudService, \n    public router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.crudService.getObjectByRef('users', this.userID).subscribe((value) => this.user = value)\n    )\n  }\n  public getBackgroundImage(): string {\n    // sign ? \n    return `url(${this.user.photoURL})`;\n  }\n  public getDate(): string { \n    const months: string[] = ['January','February','March','April','May','June','July','August','September','October','November','December'] \n    const d = new Date (this.createTime.seconds)\n    return `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()} at ${d.getHours()}:${d.getMinutes()} `;\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFirestore, DocumentSnapshot} from '@angular/fire/firestore';\nimport {from, Observable, of} from 'rxjs';\nimport {map, take, switchMap} from 'rxjs/operators';\nimport firebase from 'firebase';\nimport DocumentReference = firebase.firestore.DocumentReference;\nimport { User, Post } from '../interfaces';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n  constructor(private firestoreService: AngularFirestore, private authService: AuthService) { }\n\n  public getObjectByRef(collectionName: string, id:string): Observable<Post | User | any> {\n    return this.firestoreService.collection(collectionName).doc(id).get().pipe(\n      map(doc => doc.data()), \n      take(1)\n    );\n  }\n  public createEntity(collectionName: string, data: {}): Observable<string> {\n    return from(this.firestoreService.collection(collectionName).add(data)).pipe(\n      map((value: DocumentReference) => value.id),\n      take(1)\n    );\n  }\n\n  public updateObject(collectionName: string, id: string, data: {}): Observable<void> {\n    return from(this.firestoreService.collection(collectionName).doc(id).set(data, {merge: true})).pipe(take(1))\n  }\n  public getData<T>(collectionName: string): Observable<T[]> {\n    return this.firestoreService.collection(collectionName).snapshotChanges().pipe(\n      map((actions) => {\n        return actions.map((reference)=>{\n          const data: any = reference.payload.doc.data();\n          const id = reference.payload.doc.id;\n          return {id, ...data} as T;\n        })\n      }),\n      take(1)\n    );\n  }\n  public handleData<T>(collectionName: string): Observable<T[]> {\n    return this.firestoreService.collection(collectionName).snapshotChanges().pipe(\n      map((actions) => {\n        return actions.map((reference)=>{\n          const data: any = reference.payload.doc.data();\n          const id = reference.payload.doc.id;\n          return {id, ...data} as T;\n        })\n      })\n    );\n  }\n  public deleteObject(collectionName: string, id: string): Observable<unknown> {\n    return from(this.firestoreService.collection(collectionName).doc(id).delete()).pipe(take(1));\n  }\n  public getCurrentUserData(): any {\n    return this.authService.user$.pipe(\n      map(value => value.uid),\n      switchMap(uid => {\n        return this.firestoreService.collection('users').doc(uid).valueChanges();\n      })\n    )\n  }\n}\n","import { AfterViewInit, Directive, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appDoubleContent]'\n})\nexport class DoubleContentDirective implements AfterViewInit {\n\n  public isContentWasCreated: boolean = false;\n\n  constructor(private template: TemplateRef<any>, private vc: ViewContainerRef) {\n    this.vc.createEmbeddedView(template);\n   }\n   ngAfterViewInit(): void {\n    if (!this.isContentWasCreated) {\n      this.vc.insert(this.vc.createEmbeddedView(this.template));\n      this.isContentWasCreated = true;\n    }\n    \n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDyP1Z7JpirT37wrJNb7GdjFhla-c86rcA\",\n    authDomain: \"picloud-project.firebaseapp.com\",\n    projectId: \"picloud-project\",\n    storageBucket: \"picloud-project.appspot.com\",\n    messagingSenderId: \"18765484938\",\n    appId: \"1:18765484938:web:99caa64adc79a06bbfee73\"\n  }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { take,  tap, map} from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n   }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> {\n      return this.authService.user$.pipe(\n        map(value => !!value),\n        tap((isAuth) => {\n          if (!isAuth) {\n            console.log('User in not authorized');\n            this.router.navigate(['login']);\n          }\n        }),\n        take(1)\n      );\n  }\n  \n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { finalize, switchMap, takeLast, takeWhile, tap } from 'rxjs/operators';\nimport { Post, User } from '../interfaces';\nimport { AuthService } from '../services/auth.service';\nimport { CrudService} from '../services/crud.service';\nimport { UploadService} from '../services/upload.service';\n@Component({\n  selector: 'app-new-post-form',\n  templateUrl: './new-post-form.component.html',\n  styleUrls: ['./new-post-form.component.scss']\n})\nexport class NewPostFormComponent implements OnInit, OnDestroy {\n  public postForm: FormGroup; \n  public imageLink: string; \n  public progress: string = \"\"; \n  public currentUserData: User; \n  private subscriptions: Array<Subscription> = []; \n\n  constructor(\n    private fb:  FormBuilder, \n    private authService: AuthService, \n    private crudService: CrudService, \n    private uploadService: UploadService\n    ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.subscriptions.push(\n      this.crudService.getCurrentUserData().subscribe((value : User)=> this.currentUserData = value)\n    );    \n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n  private initForm(): void {\n    this.postForm = this.fb.group({\n      textContent: ['', [\n        Validators.required,\n        Validators.pattern(/[ -~]/)\n        // Change the validators\n      ]],\n      tag:['', [\n        Validators.required,\n        Validators.pattern(/[a-z0-9_-]/)\n      ]],\n      file:['',[\n        Validators.required\n      ]]\n    })\n  }\n  public onSubmit(): void {\n    const controls = this.postForm.controls;\n    if (this.postForm.valid) {\n      const data: Post = { \n        author: this.currentUserData.uid,\n        commentCount: 0,\n        comments: [],\n        createTime: {seconds: Date.now()},\n        likeCount: 0,\n        contentPicURL: this.imageLink,\n        tag: controls[\"tag\"].value,\n        textContent: controls[\"textContent\"].value     \n      } as Post\n      this.subscriptions.push(\n        this.crudService.createEntity('posts', data).pipe(\n          tap((postID) =>this.currentUserData.postsCount = this.currentUserData.posts.push(postID)),\n          switchMap(() => this.crudService.updateObject('users', this.currentUserData.uid, {\n            posts: this.currentUserData.posts,\n            postsCount: this.currentUserData.postsCount\n          })),\n          finalize(() => this.resetForm())\n        ).subscribe()\n      );      ``\n    }\n  }\n\n  public onFileSelected(event): void {\n    const file = event.target.files[0];\n\n    this.subscriptions.push(\n      combineLatest(this.uploadService.uploadFile(\"test\", file)).pipe(\n        tap(([percent,link])=>{\n          this.progress = percent.toString();\n          this.imageLink = link;\n        }),\n        takeWhile(([percent, link]) =>!link)\n      ).subscribe()\n    )\n    \n  } \n  public resetForm(): void {\n    this.postForm.reset();\n    this.imageLink = null; \n    this.progress = \"\";\n  }  \n}\n","<form [formGroup]=\"postForm\" (submit)=\"onSubmit()\">\n  <ul>\n    <li>\n      <label for=\"textContent\">What's new?</label>\n      <input type=\"text\" id=\"text-content\" formControlName=\"textContent\" placeholder=\"What's new?\"/>\n    </li>\n    <li>\n      <label for=\"tag\">Tag</label>\n      <input type=\"text\" id=\"tag\" formControlName=\"tag\" placeholder=\"Tag\"/>\n    </li>\n    <li class=\"wrapper\">\n      <span class=\"material-icons upload\" (click)=\"hiddenfileinput.click()\">image</span>\n      <progress max=\"100\" min=\"0\" [value]=\"progress\"></progress> \n      <button type=\"submit\">Post!</button>  \n    </li>\n  </ul>\n  <img  *ngIf=\"imageLink\" [src]=\"imageLink\"/> \n  <input type=\"file\"\n         formControlName=\"file\"\n         id=\"hidden-file-input\"\n         (change)=\"onFileSelected($event)\"\n         name=\"image\"\n         autocomplete=\"off\"\n         #hiddenfileinput\n      />\n</form>\n\n  \n\n","<app-header *ngIf=\"this.router.url !== '/login'\"></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n  \r\n\r\n","import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { StorageService } from './services/storage.service';\nimport { CrudService } from './services/crud.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public title: string ='Picloud';\n  private subscriptions: Array<Subscription> = [];\n  \n  constructor (\n    private firestore: AngularFirestore, \n    public authService: AuthService, \n    public router: Router,\n    private storage: StorageService,\n    private  crudService: CrudService\n    ) {}\n  ngOnInit() : void {\n    this.subscriptions.push(\n      this.crudService.handleData(\"posts\").subscribe((data) => this.storage.posts = data)\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","<div class=\"wrapper\">\n  <app-profile-header [user]=\"user\"></app-profile-header>\n  <ul>\n    <ng-container *ngFor=\"let post of postsSubscription | async; trackBy:trackFunction;\">\n      <li *ngIf=\"user?.posts.includes(post.id)\">\n        <app-profile-post [post]=\"post\"></app-profile-post>\n      </li>\n    </ng-container>    \n  </ul>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CrudService } from '../services/crud.service';\nimport { Subscription } from 'rxjs';\nimport { User } from '../interfaces';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n\n  private userID: string; \n  public user: User;\n  private subscriptions: Array<Subscription> = [];\n  public postsSubscription: any; \n\n  constructor(\n    private route: ActivatedRoute,\n    private crudService: CrudService\n    ) {\n    this.userID = route.snapshot.params['id'];\n   }\n\n  ngOnInit(): void {\n    this.postsSubscription = this.crudService.handleData('posts');\n    this.subscriptions.push(\n      this.crudService.getObjectByRef('users', this.userID).subscribe((value) => {\n        this.user = value;\n      })\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n  public trackFunction(index: any, item: any): string {\n    return item.id;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AuthWindowComponent } from './auth-window/auth-window.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SearchComponent } from './search/search.component';\nimport { FeedPostComponent } from './feed-post/feed-post.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PostHeaderComponent } from './post-header/post-header.component';\nimport { NewPostFormComponent } from './new-post-form/new-post-form.component';\nimport { ZoomDirective } from './zoom.directive';\nimport { DoubleContentDirective } from './double-content.directive';\nimport { ProfileHeaderComponent } from './profile-header/profile-header.component';\nimport { ProfilePostComponent } from './profile-post/profile-post.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthWindowComponent,\n    HeaderComponent,\n    FooterComponent,\n    FeedComponent,\n    ProfileComponent,\n    SearchComponent,\n    FeedPostComponent,\n    PostHeaderComponent,\n    NewPostFormComponent,\n    ZoomDirective,\n    DoubleContentDirective,\n    ProfileHeaderComponent,\n    ProfilePostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"wrapper\">\n  <aside>\n    <app-profile-header [user]=\"user\"></app-profile-header>\n    <app-new-post-form></app-new-post-form>\n  </aside> \n  <div class=\"gap\">\n\n  </div> \n  <ul>\n    <li *ngFor=\"let post of postsSubscription | async; trackBy:trackFunction\" class=\"post-wrapper\">\n      <app-feed-post [post]=\"post\"></app-feed-post>\n    </li>\n  </ul>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { User } from '../interfaces';\nimport { CrudService} from '../services/crud.service';\nimport { StorageService } from '../services/storage.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, OnDestroy {\n\n  public postsSubscription: any; \n  public user: User; \n  private subscriptions: Array<Subscription> = [];\n\n  constructor(private crudService: CrudService, private storage: StorageService) { }\n\n  ngOnInit(): void {\n    this.postsSubscription = this.crudService.handleData('posts');    \n    // this.storage.posts$.subscribe(); \n    this.subscriptions.push(\n      this.crudService.getCurrentUserData().subscribe(value => this.user = value)\n    );\n  }\n  public trackFunction(index: any, item: any): string {\n    return item.id;\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudService } from '../services/crud.service'\nimport { Subscription} from 'rxjs'\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  public userID: string; \n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private firestore: AngularFirestore, \n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.authService.user$.subscribe(\n        value => value \n          ? this.userID = value.uid \n          : console.warn(\"User is now logged out\")\n      )\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n  signOut(): void {\n    this.subscriptions.push(\n      this.authService.signOut().subscribe(() => this.router.navigate(['']))\n    );\n  }\n}\n","<div class=\"logo-wrapper\">\n  <h1><a routerLink=\"/feed\">picloud</a></h1>\n</div>  \n<app-search></app-search>\n<nav>\n  <ul>\n    <li><a routerLink=\"/feed\">Home</a></li>\n    <li><a routerLink=\"/profile/{{userID}}\">Profile</a></li>\n    <li><button (click)=\"signOut()\">Sign Out</button></li>\n  </ul>\n  \n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","<ng-container [ngTemplateOutlet]=\"post ? userImage : defaultImage\">\n</ng-container>\n\n\n<ng-template #userImage>\n  <div class=\"image\" [style.backgroundImage]=\"getBackgroundImage()\"></div>\n</ng-template>\n<ng-template #defaultImage>\n  <div class=\"image\"></div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../interfaces';\n\n@Component({\n  selector: 'app-profile-post',\n  templateUrl: './profile-post.component.html',\n  styleUrls: ['./profile-post.component.scss']\n})\nexport class ProfilePostComponent implements OnInit {\n  @Input() \n  post: Post;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  public getBackgroundImage(): string {\n    return `url(${this.post.contentPicURL})`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport {from, Observable} from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private storage: AngularFireStorage) { }\n  public uploadFile(folder: string, file: File): [percent: Observable<any>, link: Observable<any>] {\n    const name: string= file.name; \n    const filePath: string = `${folder}/${new Date().getTime()}_${name}`;\n    const task: AngularFireUploadTask = this.storage.upload(filePath, file);\n    return [\n      task.percentageChanges(), \n      this.getLink(task, filePath).pipe(startWith(null))\n    ];\n  }\n  private getLink(task: AngularFireUploadTask, filePath: string): Observable<any> {\n    return from(task).pipe(switchMap(()=> this.storage.ref(filePath).getDownloadURL())) \n  }\n}\n","import { isNgTemplate } from '@angular/compiler';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { CrudService } from '../services/crud.service'; \nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-feed-post',\n  templateUrl: './feed-post.component.html',\n  styleUrls: ['./feed-post.component.scss']\n})\nexport class FeedPostComponent implements OnInit {\n  @Input() post: any; \n\n  constructor(private crudService: CrudService) {\n    \n   }\n\n  ngOnInit(): void {\n  }\n  public deletePost(): void {\n    this.crudService.deleteObject(\"posts\", this.post.id);\n  }\n  public getBackgroundImage(): string {\n    return `url(${this.post.contentPicURL})`;\n  }\n\n}\n","<app-post-header [userID]=\"post.author\" [createTime]=\"post.createTime\"></app-post-header>\n<div class=\"post-image-wrapper\" (click)=\"deletePost()\">\n  <div class=\"post-image\" [style.backgroundImage]=\"getBackgroundImage()\"></div>\n</div>\n<div class=\"footer-wrapper\">\n  <ul >\n    <li>\n      <span class=\"material-icons\">favorite</span>\n      <p class=\"stat-count\">{{post.likeCount}}</p>\n    </li>\n    <li>\n      <span class=\"material-icons\">chat_bubble</span>\n      <p class=\"stat-count\">{{post.commentCount}}</p>\n    </li>\n  </ul>\n  <div class=\"post-footer-tag\">\n    #{{post.tag}}\n  </div>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { from, Observable, of } from 'rxjs';\nimport { take,  tap, switchMap, map} from 'rxjs/operators'\nimport firebase from 'firebase';\nimport auth = firebase.auth; \nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { User } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public user$: Observable<firebase.User | null>;   \n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private db: AngularFirestore\n    ) {\n    this.user$ = this.afAuth.authState;\n  }\n  public googleSign(): Observable<auth.UserCredential> {\n    const provider = new auth.GoogleAuthProvider();\n    return from(this.afAuth.signInWithPopup(provider)).pipe(\n      tap((authUser: auth.UserCredential) => {\n        firebase.auth().onAuthStateChanged(user => {\n          if (user) {\n            this.db.collection('users').doc(user.uid).get().subscribe(value => {\n              if (value.exists) {\n                this.db.collection('users').doc(user.uid).update({\n                  uid: user.uid,\n                  displayName: user.displayName,\n                  photoURL: user.photoURL,\n                  email: user.email\n                });\n              } else {\n                this.db.collection('users').doc(user.uid).set({\n                  uid: user.uid,\n                  displayName: user.displayName,\n                  photoURL: user.photoURL,\n                  email: user.email, \n                  posts: [],\n                  postsCount: 0,\n                  followersCount: 0,\n                  followingCount: 0\n                });\n              }\n            });\n            \n          }\n        })\n      }),\n      take(1)\n    )\n  }\n  public signOut(): Observable<void> {\n    return from(this.afAuth.signOut()).pipe(take(1)); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Post } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  public posts$: BehaviorSubject<Post> = new BehaviorSubject<Post>(null);\n\n  // types ???\n  private _posts: any; \n  constructor() { }\n\n  public get posts(): any {\n    return this._posts;\n  }\n  public set posts(_posts: any) {\n    this._posts = _posts;\n    this.posts$.next(_posts);\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"image-wrapper\">\n    <ng-container [ngTemplateOutlet]=\"user ? userImage : defaultImage\">\n    </ng-container>\n  </div>\n  <section>\n    <h2>{{user?.displayName}}</h2>\n    <ul>\n      <li>\n        <h6>{{user?.postsCount}}</h6>\n        <span>posts</span>\n      </li>\n      <li>\n        <h6>{{user?.followersCount}}</h6>\n        <span>followers</span>\n      </li>\n      <li>\n        <h6>{{user?.followingCount}}</h6>\n        <span>following</span>\n      </li>\n    </ul>\n  </section>\n</div>\n\n\n\n\n<ng-template #userImage>\n  <div class=\"image\" [style.backgroundImage]=\"getBackgroundImage()\"></div>\n</ng-template>\n<ng-template #defaultImage>\n  <div class=\"image\"></div>\n</ng-template>","import { Component, Input, OnInit } from '@angular/core';\nimport { User } from '../interfaces';\n\n@Component({\n  selector: 'app-profile-header',\n  templateUrl: './profile-header.component.html',\n  styleUrls: ['./profile-header.component.scss']\n})\nexport class ProfileHeaderComponent implements OnInit {\n\n  @Input() \n  public user : User; \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  public getBackgroundImage(): string {\n    return `url(${this.user.photoURL})`;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { take,  tap, map} from 'rxjs/operators';\n@Component({\n  selector: 'app-auth-window',\n  templateUrl: './auth-window.component.html',\n  styleUrls: ['./auth-window.component.scss']\n})\nexport class AuthWindowComponent implements OnInit, OnDestroy {\n  \n  private subscriptions: Array<Subscription> = [];\n\n  constructor(private firestore: AngularFirestore, \n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) { \n\n  }\n\n  ngOnInit(): void {\n  }\n  signInWithGoogle(): void {\n    this.subscriptions.push(\n      this.authService.googleSign().subscribe(() => this.router.navigate([\"feed\"]))\n    );    \n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","<div class=\"auth-text-wrapper\">\n  <h2>Welcome to picloud!</h2>\n  <h3>A place to share your moments.</h3>\n  <button (click)=\"signInWithGoogle()\">Join using Google</button>\n</div>  \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"icon-wrapper\">\n  <span class=\"material-icons\">search</span>\n</div>  \n<input placeholder=\"Search\">\n  \n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AuthWindowComponent } from './auth-window/auth-window.component';\n\nimport { FeedComponent } from './feed/feed.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard.service';\nimport { LoginGuard } from './guards/login.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: AuthWindowComponent, \n    canActivate: [LoginGuard]\n  },\n  {\n    path: 'profile',\n    redirectTo: 'feed',\n  },\n  {\n    path: 'profile/:id',\n    component: ProfileComponent, \n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'feed',\n    component: FeedComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}